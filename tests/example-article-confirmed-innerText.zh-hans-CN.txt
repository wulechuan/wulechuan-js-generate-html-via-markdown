§ 吴乐川的文章默认样式的示例

作者：吴乐川

§ 自然语言范文
§ 《千字文》[节选]

天地玄黄 宇宙洪荒
日月盈昃 辰宿列张
寒来暑往 秋收冬藏
闰余成岁 律吕调阳
云腾致雨 露结为霜
金生丽水 玉出昆冈
剑号巨阙 珠称夜光
果珍李柰 菜重芥姜

§ 《日记（2019年6月18日）》[节选]

出了家门，我二人在单元门的雨檐下站着，我左手挎着端儿的书包，双手用力把伞撑开。开伞时左臂自然会有些吃力，我于是小声嘟囔了一句：“这包这么重啊！现在的孩子（上）幼儿园就背这么多书！”

有道是言者无意，听者有心。我这随口一句话，端儿听了立刻很认真地说：“爸爸，（书包）给我背吧。我自己来背。”我推辞说：“没事儿，爸爸可以拿。”端儿又道：“爸爸，你一只手（拿），我两只手（指双肩）！我自己能行！”

“爸爸，你一只手，我两只手。”看似多么简单的一句话，我这当大人的却一下子感动了，只觉得一股暖流涌入心间。我也不再争了，顺他的意，帮着他把书包背好。

§ 唐诗
§ 《马诗二十三首·其五》

【唐】 李贺

大漠沙如雪
燕山月似钩
何当金络脑
快走踏清秋

§ 杂乱内容，仅用于视觉样式之呈示

一段文字中，有时会有着重的文字，也有时会有斜体的文字。

这里是 GitHub，我本人有意将其译为【吉特中心】。当然，这并非官方译法，乃鄙人之拙见。

如果一个链接指向本文，不妨称其为文内链接，而不应生硬的由英语直译为所谓“本地链接”。另，文内链接看起来与应与指向其它文章或网址的链接稍有不同，以为明示。暗示不堪用，明示才好。小例一则：跳转至本文《程序代码片段示例集》。

再来看看行文中的【代码词汇】或【术语】：例如孙行者和计算机，又如 querySelector 和 querySelectorAll 早已取代了老式的 getElementsById 和 getElementsByTagName 等。

计算机键盘快捷键，其视觉样式如是：Ctrl+            ；又例：如今，Ctrl+Shift+s 这一组合键早已广泛用于各种现代计算机软件中，代表（将工作内容或文件）另存为（一文件）之功能。

还有时候，有些内容会故意被“杠掉”，即被中划线划去，表示此内容不正确，不应采纳，应作废。例如：地球是平的。

§ 多级列表

第 1 级第 1 项

第 1 级第 2 项

西施，约 2522 岁
王昭君，2070 岁
貂蝉，约 1820 岁
杨玉环，1300 岁
我媳妇儿，永远 20 岁

第 1 级第 3 项

孔夫子热评西方美食
周瑜正式出任新航母舰长
李白担任北京大学名誉副校长
岳鹏举在南方各地视察防御工事
祖冲之发表全新论文，受到中科院表彰
武松打虎一案受到自然保护主义者质疑，有关部门已正式展开调查
李广在 2019 亚洲射箭锦标赛再次夺魁

第 1 级第 4 项

第 1 级第 5 项

第 2 级第 1 项

第 2 级第 2 项

第 2 级第 3 项

甲：李哪吒
乙：敖丙
丙：李靖
丁：殷夫人
戊：太乙真人
己：申公豹
庚：东海龙王
辛：元始天尊
壬：巡海夜叉
癸：长生云

第 1 级第 6 项

§ 多级标题
§ 电影《哪吒之魔童降世》的剧情简介

天地灵气孕育出一颗能量巨大的混元珠，元始天尊将混元珠提炼成灵珠和魔丸，灵珠投胎为人，助周伐纣时可堪大用；而魔丸则会诞出魔王，为祸人间。元始天尊启动了天劫咒语，3 年后天雷将会降临，摧毁魔丸。太乙受命将灵珠托生于陈塘关李靖家的儿子哪吒身上。然而阴差阳错，灵珠和魔丸竟然被掉包。本应是灵珠英雄的哪吒却成了混世大魔王。调皮捣蛋顽劣不堪的哪吒却徒有一颗做英雄的心。然而面对众人对魔丸的误解和即将来临的天雷的降临，哪吒是否命中注定会立地成魔？他将何去何从？

§ Web API 可以分为很多类
§ 文档对象模型

文档对象模型（DOM）将 web 页面与到脚本或编程语言连接起来。通常是指 JavaScript，但将 HTML、SVG 或 XML 文档建模为对象并不是 JavaScript 语言的一部分。DOM 模型用一个逻辑树来表示一个文档，树的每个分支的终点都是一个节点（node），每个节点都包含着对象（object）。DOM 的方法（method）让你可以用特定方式操作这个树，用这些方法你可以改变文档的结构、样式或者内容。节点可以关联上事件处理器，一旦某一事件被触发了，那些事件处理器就会被执行。[1]

§ 层叠样式表对象模型

CSS Object Model 是一组允许用 JavaScript 操纵 CSS 的 API。 它是继 DOM 和 HTML API 之后，又一个操纵 CSS 的接口，从而能够动态地读取和修改 CSS 样式。[2]

§ 浏览器对象模型

浏览器对象模型（BOM）指的是由 Web 浏览器暴露的所有对象组成的表示模型。BOM 与 DOM 不同，BOM 既没有标准的实现，也没有严格的定义, 所以浏览器厂商可以自由地实现 BOM。[3]

§ 引用来源

上文[1]来自 MDN，但故意没有作为引用段落，以便呈现正常段落文字的样貌。

 

上文[2]来自 MDN，但故意没有作为引用段落，以便呈现正常段落文字的样貌。

 

上文[3]来自 维基百科，但故意没有作为引用段落，以便呈现正常段落文字的样貌。

§ 引用的文字

我们还可以引用一小段文字。例如，子曰：

学而时习之 不亦说乎 有朋自远方来 不亦乐乎 人不知而不愠 不亦君子乎

引用的文字中有时也会有较复杂的版式，见下例。

SOFTIMAGE|XSI

坐落于加拿大蒙特利尔的 SOFTIMAGE Co. 公司曾是计算机画面制作工具行业的顶尖力量。多年来，该公司几经易主，母公司先后有微软（Microsoft）公司、Avid 公司，以及最终的欧特克（Autodesk）公司。

早年，SOFTIMAGE 公司旗下三维动画制作软件 SOFTIMAGE|3D 曾经好莱坞业界最尖端的三维动画工具。1993 年公映的著名电影《侏罗纪公园》，其中的恐龙形象全部由该工具制作完成。

2000 年，SOFTIMAGE 公司推出划时代的全新三维动画工具，名为 SOFTIMAGE|XSI。其中字母“X”来源于微软公司的“.x”技术。实际上，其强有力的竞争对手，时为 sgi 公司子公司的 Alias 公司，已于 1998 年先行推出同样划时代的系列三维动画工具 Maya。外界认为，SOFTIMAGE|XSI 的推出是匆忙的。其 1.0 版本功能非常有限。值得褒赞的是，SOFTIMAGE|XSI 的人机交互设计、三维多边形建模功能、场景数据管理功能、曲线动画设计功能和三维渲染能力都非常出众。脚本环境基于微软公司的 JScript 标准，异常友好。参见下例：

/*
    This is a file of the standard of JScript from Microsoft.
    It runs in SOFTIMAGE|XSI scripting environment.
    The functionality of this file's is to print some details
    of a 3D object selected by the user.
*/

SelectObj('_cam_particles_painting.focus_plane_indicator', null, null);

// User currently selected Object
var o3DObj = Selection(0);

var oParam = o3DObj.Parameters;
var oPrimitive = o3DObj.ActivePrimitive;

// object: ICE Attribute Collection
var oIAC = oPrimitive.ICEAttributes;

for (var i = 0; i < oIAC.Count; i++) {
    LogMessage('[' + i + '] ' + oIAC(i).Name);
}


// A specific attribute
var oIA = oIAC.Item('nb_CameraUtil_FocusDistance');

LogMessage('\n\t\t Name: \t\t'   + oIA);
LogMessage('\t IsDefined: \t'    + oIA.IsDefined);
LogMessage('\t DataType: \t'     + oIA.DataType);
LogMessage('\t IsConstant: \t'   + oIA.IsConstant);
LogMessage('\t IsReadOnly: \t'   + oIA.IsReadOnly);
LogMessage('\t ElementCount: \t' + oIA.ElementCount);

var dataArray = oIA.DataArray;
LogMessage(oIA.DataArray.Element);

for (var j = 0; j < dataArray.length; j++) {
    LogMessage('[' + j + '] ' + dataArray[j]);
}


后期于 4.0、5.1、7.0 分别发力，提供了令业界赞叹的特性集。其中，自 2008 年春发布的 7.0 始，其提供的“交互式创作环境（ICE）”借助可视化节点图可轻松操控庞大的数据流，构建逻辑规则，控制粒子系统，产生变幻无穷的效果。见图（来源于维基百科）：

同年（2008 年）11 月 18 日，欧特克公司宣布全资收购 SOFTIMAGE 公司，并将其所有产品更名为小写形式，如 “Softimage|xsi”。

2014 年 3 月，欧特克公司发布 SOFTIMAGE 全线产品的停产声明。Softimage|xsi 2015 将成为该软件最后的发行版本。其中诸多优秀功能（特别是 ICE）将被逐一移植到 Maya 中。自此，争斗多年的 Maya 和 SOFTIMAGE|XSI，以前者“吞噬”后者而告终。

（注：Alias 公司早于 SOFTIMAGE 公司被欧特克收购。因此 Maya 早于 SOFTIMAGE|XSI 归为欧特克旗下的产品）。

§ 插图
§ 正常的插图

§ 加载失败的插图

§ 程序代码片段示例集
§ Javascript 代码片段
// 这是一句行尾注释。好吧，我承认它恰好在这一行的开头。
import something from 'somethingjs'

var myModule = require('my-module');

const author = {
    name: '吴乐川',
    age: 40,
}

var newsThatAreNotNewsAnyMore = [
    '孔夫子热评西方美食',
    '周瑜正式出任新航母舰长',
    '李白担任北京大学名誉副校长',
    '岳鹏举在南方各地视察防御工事',
    '祖冲之发表全新论文，受到中科院表彰',
    '武松打虎一案受到自然保护主义者质疑，有关部门已正式展开调查',
    '李广在 2019 亚洲射箭锦标赛再次夺魁',
]


let anUndefinedValue = undefined; // 看看语句结尾分号的效果
let aNull = null;

var anInteger = (19 + 3 * (79 - 51) + 2013) % 2

anInteger++;

++anInteger;

anInteger--;

Math.max(anInteger, -90)

const cellPhoneNumberRegExp = /^1\d{2}([- ]?\d{4}){2}$/

let cellPhoneNumber = '13345678901 '
cellPhoneNumber = cellPhoneNumber.trim()

const cellPhoneNumberIsValid = cellPhoneNumberRegExp.test(cellPhoneNumber)
console.log('cellPhoneNumberIsValid', cellPhoneNumberIsValid) // true

var aString = `Meaningless ${cellPhoneNumber} ` + !!!true +
    ' ' + 15 + ' ' + !false + Math.random().toFixed(4)


const aBoolean = true || false && !true && !!false || !0 &&
    !!1 || 9 < 6 && 8 >= 8 || NaN === NaN && 10 > 13;

var a, b, c, d = 11, e = 12, f, g = anInteger <= 1024 + -1e+8;
f = 2e-5 / 16;

let isAnArray = false
if (Array.isArray([])) {
    isAnArray = true
}

const regExp = new RegExp('\\w+', 'i')

const regExp1 = /^\[[^\<](\(|\))\$\{[a-z\d_-]+[\w\.]{16,}a*b*\*\\,\]\^"--toc.min\.js$/gi;
const regExp2 = /(^|<)[\]A-Za-z-_][_a-z\d_-:\$]*[^+][+-](>|$)/g
const regExp3 = /[^a+]([)-+])/

const windowMethods = Object.keys(window).map(k => window[k]).filter(p => typeof p === 'function')
console.log(windowMethods)

if (false) {
    throw TypeError('Should not throw here!')
}
if (a == undefined) {
    console.log('double equal signs used, instead of triple ones')
} else if (a != undefined) {
    console.log('"!=" used, instead of "!=="')
}

$(function (e) {
    alert('DOMs are ready')
    console.log(window.innerHeight, window.self, global)
})

const anArrowFunction = (count) => {
    for (var i = 0; i<count; i++) {
        if (i === 3) {
            continue
        }

        debugger

        switch (i % 2) {
            case 0:
            default:
                console.log(i, 'It\'s an even number.')
                break
            case 1:
                console.log(i, 'It\'s an odd number.')
                break
        }

        if (i >= 10000) {
            break
        }
    }
}

window.tempString = '\nhello\n unnecessary escaped chars: \m \p \- \.'
delete window.tempString


window['temp-string-2'] = `
    multiple
    lines
    are
    occupied.
`

var num = 10;

num += 2;
num -= 2;
num *= 2;
num /= 2;
num %= 2;

var now = new Date()

const ul = Array.prototype.slice.apply(
    document.querySelectorAll('ul.news-list')
)[0]

newsThatAreNotNewsAnyMore.forEach(msg => {
    const li = document.createElement('li')
    li.innerText = msg

    ul.appendChild(li)
})

console.log(
    newsThatAreNotNewsAnyMore.length,
    newsThatAreNotNewsAnyMore.join('').length
)

function addTwoNumbers(a, b) {
    if (typeof a === 'number' && typeof b === 'number') {
        return a + b
    }

    return NaN
}

async function anAsyncFunction(something, ...anything) {
    await new Promise(resolve => setTimeout(() => resolve(), 123))
    return +prompt('now please input a number:')
}

export default function isAPromiseObject(input) {
    /*
        这就是
        啰哩吧嗦的
        多行注释
        的效果。瞅瞅吧。
    */
    return !!input && typeof input.then === 'function' && typeof input.done === 'function'
}

module.exports = { content: 'nothing' };

exports.author = 'wulechun@live.com';

§ HTML 代码片段
<!DOCTYPE html>
<html lang="zh-hans-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>乐川的示范文档</title>
    <!-- 这是简短的单行注释。 -->
    <style>
        div {
            width:  100px;
            height: 200px;
            border: 6px solid #888;
            border-radius: 0.5em;
            box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.2);
        }

        #app {
            display: flex;
            position: relative;
        }

        .bg-view {
            filter: blur(16px);
            transform: scaleX(-1);
        }

        #cover {
            backdrop-filter: blur(30px);
        }

        .box-1 { background-image: url('./images/beauties/beauty-1.jpg'); }
        .box-2 { background-image: url('./images/beauties/beauty-2.jpg'); }
        .box-3 { background-image: url('./images/beauties/beauty-3.jpg'); }
        .box-4 { background-image: url('./images/beauties/beauty-4.jpg'); }
    </style>
</head>
<body>
    <article>
        <h1>欢迎！</h1>

        <p class="greeting">大家好，我是
            <a target="_blank" href="mailto:wulechuan@live.com">吴乐川</a>。
        </p>

        <p id="poem"><span class="content">关关雎鸠 在河之洲 窈窕淑女 君子好逑</span></p>

        <ul>
            <li><span>A<em>B</em>C</span></li>
            <li><span>D<em>E</em>F</span></li>
            <li><span>G<em>H</em>I</span></li>
        </ul>

        <p>天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。
           人之为学有难易乎？学之，则难者亦易矣；不学，则易者亦难矣。</p>
    </article>

    <!--
        这是啰哩吧嗦的多行注释，
        写这么多行，
        只是为了能令其
        多占据几行。
        你瞧，大体如此。
    -->

    <div id="app">
        <button id="one-button">我是按钮</button><br>
        <img id="beauty" src="./images/beauties/beauty-1.jpg" alt="此处本应有美女" tilte="一位大美女">
    </div>

    <script>
        var button = document.querySelector('#one-button');
        var beautyImage = document.getElementById('beauty');

        button.onclick = function () {
            beautyImage.src = './images/beauties/beauty-2.jpg';
            beautyImage.title = '另一位大美女';
        };
    </script>

    <script>
        const girl = document.querySelector('img')
        girl.addEventListener('mouseover', function (event) {
            this.src = './images/beauties/beauty-3.jpg'
            this.title = '绝色美人'
        })
    </script>
</body>
</html>

§ CSS 代码片段
html {
    font-size: 20px;
}

body {
    padding: 3rem 1rem 4rem 1rem;
}

html, body {
    min-height: 100%;
}

#app {
    display: flex;
    position: relative;
    width: 100%;
    font-family: 'Segoe UI', '微软雅黑', serif;
}

.back-to-top {
    position: fixed;
    display: block;
    background-image: url('./images/rocket.png');
    width: 1.5rem;
    height: 1.5rem;
    overflow: hidden;
}

article, .article, p, .copywriting {
    color: black;
}

a {
    color: green;
}

.optional-line-break {
    display: block;
}

@media screen and (max-width: 600px) {
    .optional-line-break {
        display: none;
    }
}

a:hover {
    text-decoration: underline !important;
}

a[href^="#"] {
    color: blue;
}

@media (max-width: 900px) {

    html {
        font-size: 16px;
    }

    body {
        font-size: 1rem;
    }
}

.markdown-article,
.markdown-article-toc,
.markdown-article-back-to-top {
    display: block;
}

.markdown-article-back-to-top {
    border: 1px solid #778899;
    box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.4);
}

@keyframes fade-in {
    0%   { opacity: 0; }
    100% { opacity: 1; }
}

.my-container::before {
    content: '';
    display: block;
    border-color: black;
    background-color: currentColor;
    text-indent: -100px;
}

/* chief navigation */

nav ul {
    display: flex;
    justify-content: space-around !important;
    flex-wrap: wrap;
    list-style: none;
    padding: 20px 10px;
}

nav li {
    display: block;
    padding: 0;
    margin: 10px 5px;
    width: 90px;
    transition: all 0.4s ease-out;
}

.disc {
    transform: rotate(3.14159265rad);
    transform: rotate(180deg);
    transform: rotate(0.5turn);
}

/* news list */

.news-list {
    font-size: 1.2rem;
    list-style: none;
}

.news-list li {
    margin: 0.15em auto;
    padding: 0.25em 1em;
    background-color: #eee;
}

.news-list li:nth-child(even) {
    background-color: #d3d3d3;
}

§ Stylus(CSS) 代码片段
& {
    box-sizing: content-box !important;
    max-width: articleBlockMaxWidth;
    margin: auto;
    line-height: 1.5;

    small {
        font-size: .707em; // 想注释一下，但一时间觉得没啥好写的。
    }

    /*
        这是啰哩吧嗦的多行注释，
        写这么多行，
        只是为了能令其
        多占据几行。
        你瞧，大体如此。
    */

    h1, h2, h3, h4, h5, h6, dt {
        padding:       0.5rem;
        margin-left:  -0.5rem; // 补偿 padding-left
        margin-right: -0.5rem; // 补偿 padding-right
    }
}

§ XML 代码片段

节选自 SOFTIMAGE|XSI 快捷键配置文件。

<?xml version="1.0" encoding="iso-8859-1"?>
<xsi_file type="Keymap" xsi_version="9.5.184.0" syntax_version="1.0">
   <keymap name="lechuan_si2011SAP_default">
      <keylist name="" guid="{00000000-0000-0000-0000-000000000000}">
         <key
            name="Help"
            key="VK_F1"></key>
         <key
            name="Save Scene"
            key="S"
            modifier="DSCMD_CTRL"></key>
      </keylist>
      <keylist name="AM Transition Tool" guid="{4E7133BE-503D-41A2-84F8-48CA38BFAAAC}">
         <key
            name="Switch to Bridge transition"
            key="B"></key>
         <key
            name="Switch to Cardinal transition"
            key="C"></key>
         <key
            name="Switch to Standard transition"
            key="T"></key>
      <keylist name="AM Transition Tool" guid="{4E7133BE-503D-41A2-84F8-48CA38BFAAAC}">
      </keylist>
      <keylist name="XSI" guid="{50830560-31B5-11D0-82E7-00A0243E268D}">
         <key
            name="Frame All"
            key="A"></key>
         <key
            name="Frame Selection"
            key="F"></key>
         <key
            name="Navigate Tool"
            key="S"></key>
         <key
            name="Raycast Polygon Select Tool"
            key="U"></key>
         <key
            name="Select Parent in Branch"
            key="VK_UP"
            modifier="DSCMD_CTRL|DSCMD_ALT"></key>
         <key
            name="Select Tree"
            key="T"
            modifier="DSCMD_ALT"></key>
         <key
            name="Subdivide"
            key="D"
            modifier="DSCMD_SHIFT"></key>
         <key
            name="Switch to Model Toolbar"
            key="1"></key>
         <key
            name="Switch to Animate Toolbar"
            key="2"></key>
         <key
            name="Switch to Render Toolbar"
            key="3"></key>
         <key
            name="Switch to ICE Toolbar"
            key="4"></key>
         <key
            name="Switch to Simulate Toolbar"
            key="4"
            modifier="DSCMD_CTRL"></key>
         <key
            name="Scaling Tool"
            key="X"></key>
         <key
            name="Translate Tool"
            key="V"></key>
         <key
            name="Rotation Tool"
            key="C"></key>
         <key
            name="Undo"
            key="Z"
            modifier="DSCMD_ALT|DSCMD_SHIFT"></key>
      </keylist>
   </keymap>
</xsi_file>

§ 表格
§ MarkDown 表格
项目	内容
姓名	吴乐川
性别	男
出生年份	1979
家乡	南昌市
所爱	SOFTIMAGE|XSI
§ HTML 表格内嵌几种代码片段
甲	乙
Javascript	
const aSnippetInsideATable = '你好';


css	
.wulechuan {
    color: #790319;
}


普通文本	
文章段落、多级标题在表格中的效果
《荷塘月色》[节选]

曲曲折折的荷塘上面，弥望的是田田的叶子。叶子出水很高，像亭亭的舞女的裙。层层的叶子中间，零星地点缀着些白花，有袅娜地开着的，有羞涩地打着朵儿的；正如一粒粒的明珠，又如碧天里的星星，又如刚出浴的美人。微风过处，送来缕缕清香，仿佛远处高楼上渺茫的歌声似的。这时候叶子与花也有一丝的颤动，像闪电般，霎时传过荷塘的那边去了。叶子本是肩并肩密密地挨着，这便宛然有了一道凝碧的波痕。叶子底下是脉脉的流水，遮住了，不能见一些颜色；而叶子却更见风致了。
